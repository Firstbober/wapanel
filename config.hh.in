#pragma once
#include <string>
#include <vector>
#include <toml11/toml.hpp>
#include <xdgpp/xdg.hpp>

#define MAIN_CONFIG_DIR std::string(xdg::ConfigHomeDir().string() + "/wapanel")
#define MAIN_CONFIG_FILE MAIN_CONFIG_DIR + std::string("/wapanel.toml")
#define MAIN_STYLE_FILE MAIN_CONFIG_DIR + std::string("/wapanel.css")
#define PRIORITIZED_STYLE_FILE "./wapanel.css"

#define CONFIG_SEARCH_PATHS                                                                                            \
	{ "./wapanel.toml", MAIN_CONFIG_FILE }

#define VERSION_STR "@version@"
#define PREFIX_DATA_DIR "../@data_dir@"
#define DATA_DIR "../@data_dir@/wapanel"

namespace wapanel::conf {

// Panel stuff.
enum class panel_position { TOP, BOTTOM };

struct panel_config {
	panel_position position;
	unsigned int height;

	std::vector<std::pair<std::string, toml::value>> applets_config;
};

// General stuff.
struct global_config {
	std::vector<panel_config> panels_conf;
	std::string used_config_file;
};

extern global_config config;

// This functions reads config from
// first found path and places data in wapanel::conf::config.
// Returns true if found any error.
auto read_config() -> bool;

}